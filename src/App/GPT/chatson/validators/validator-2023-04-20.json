{
  "$jsonSchema": {
    "bsonType": "object",
    "required": [
      "conversation_uuid",
      "message_order",
      "messages",
      "api_responses",
      "schema_version"
    ],
    "properties": {
      "conversation_uuid": {
        "bsonType": "string",
        "description": "The unique identifier for the conversation."
      },
      "message_order": {
        "bsonType": "object",
        "additionalProperties": {
          "bsonType": "object",
          "additionalProperties": {
            "bsonType": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "description": "A UUIDv4 string representing the version of a message."
          },
          "description": "An object where the keys are the versions of the messages and the values are UUIDv4 strings representing the messages."
        },
        "description": "An object where the keys are the orders of the messages and the values are objects that contain the versions of the messages."
      },
      "messages": {
        "bsonType": "object",
        "additionalProperties": {
          "bsonType": "object",
          "required": [
            "message_uuid",
            "author",
            "model",
            "timestamp",
            "role",
            "message"
          ],
          "properties": {
            "message_uuid": {
              "bsonType": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "A UUIDv4 string representing the message."
            },
            "author": {
              "bsonType": "string",
              "description": "The name of the author of the message."
            },
            "model": {
              "bsonType": "object",
              "required": ["api_name", "friendly_name", "description"],
              "properties": {
                "api_name": {
                  "enum": ["gpt-3.5-turbo", "gpt-4", "gpt-4-32k"],
                  "description": "The name of the API model used to generate the message."
                },
                "friendly_name": {
                  "bsonType": "string",
                  "description": "A friendly name for the API model used to generate the message."
                },
                "description": {
                  "bsonType": "string",
                  "description": "A description of the API model used to generate the message."
                }
              },
              "description": "An object containing information about the API model used to generate the message."
            },
            "timestamp": {
              "bsonType": "string",
              "description": "The timestamp of the message creation."
            },
            "role": {
              "enum": ["user", "system"],
              "description": "The role of the message, which can be either 'user' or 'system'."
            },
            "message": {
              "bsonType": "string",
              "description": "The content of the message."
            }
          },
          "description": "An object representing a message, with a UUIDv4 string as the key."
        },
        "description": "An object representing all the messages in the conversation, with UUIDv4 strings as the keys."
      },
      "api_responses": {
        "bsonType": "array",
        "items": {
          "bsonType": "object",
          "required": [
            "user",
            "model_api_name",
            "completion_timestamp",
            "prompt_tokens",
            "completion_tokens",
            "total_tokens",
            "completion_message_uuid",
            "message_uuids"
          ],
          "properties": {
            "user": {
              "bsonType": "string",
              "description": "The name of the user who requested the API response."
            },
            "model_api_name": {
              "enum": ["gpt-3.5-turbo", "gpt-4", "gpt-4-32k"],
              "description": "The name of the API model used to generate the response."
            },
            "completion_timestamp": {
              "bsonType": "string",
              "description": "The timestamp of the response completion."
            },
            "prompt_tokens": {
              "bsonType": "int",
              "description": "The number of tokens in the prompt."
            },
            "completion_tokens": {
              "bsonType": "int",
              "description": "The number of tokens in the completed response."
            },
            "total_tokens": {
              "bsonType": "int",
              "description": "The total number of tokens used in the response, including both the prompt and the completed response."
            },
            "completion_message_uuid": {
              "bsonType": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
              "description": "A UUIDv4 string representing the completed response message."
            },
            "message_uuids": {
              "bsonType": "array",
              "items": {
                "bsonType": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "description": "An array of UUIDv4 strings representing the message UUIDs used in generating the response."
              },
              "description": "An array of UUIDv4 strings representing the message UUIDs used in generating the response."
            }
          },
          "description": "An object representing an API response."
        },
        "description": "An array of objects representing API responses."
      },
      "schema_version": {
        "bsonType": "string",
        "description": "The version of the JSON Schema used for validation."
      }
    },
    "description": "An object representing a conversation."
  }
}
